'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _enzyme = require('enzyme');

var _until = require('./until');

var _until2 = _interopRequireDefault(_until);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Div = function Div() {
  return _react2.default.createElement('div', null);
};
var hoc = function hoc(Component) {
  return function () {
    return _react2.default.createElement(Component, null);
  };
};

describe('until', function () {
  var _class, _temp2;

  it('shallow renders the current wrapper one level deep', function () {
    var EnhancedDiv = hoc(Div);
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(EnhancedDiv, null)), 'Div');
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement('div', null)), true);
  });

  it('shallow renders the current wrapper several levels deep', function () {
    var EnhancedDiv = hoc(hoc(hoc(Div)));
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(EnhancedDiv, null)), 'Div');
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement('div', null)), true);
  });

  it('stops shallow rendering when the wrapper is empty', function () {
    var nullHoc = function nullHoc() {
      return function () {
        return null;
      };
    };
    var EnhancedDiv = nullHoc();
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(EnhancedDiv, null)), 'Div');
    _assert2.default.strictEqual(wrapper.html(), null);
  });

  it('shallow renders as much as possible when no selector is provided', function () {
    var EnhancedDiv = hoc(hoc(Div));
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(EnhancedDiv, null)));
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement('div', null)), true);
  });

  it('shallow renders the current wrapper even if the selector never matches', function () {
    var EnhancedDiv = hoc(Div);
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(EnhancedDiv, null)), 'NotDiv');
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement('div', null)), true);
  });

  it('stops shallow rendering when it encounters a DOM element', function () {
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(Div, null)
    )), 'Div');
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(Div, null)
    )), true);
  });

  it('throws when assert.strictEqual called on an empty wrapper', function () {
    _assert2.default.throws(function () {
      _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(Div, null)).find('Foo'), 'div');
    }, Error, 'Method “until” is only meant to be run on a single node. 0 found instead.');
  });

  it('shallow renders non-root wrappers', function () {
    var Container = function Container() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(Div, null)
      );
    };
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(Container, null)).find(Div));
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement('div', null)), true);
  });

  // eslint-disable-next-line react/prefer-stateless-function

  var Foo = function (_React$Component) {
    _inherits(Foo, _React$Component);

    function Foo() {
      _classCallCheck(this, Foo);

      return _possibleConstructorReturn(this, (Foo.__proto__ || Object.getPrototypeOf(Foo)).apply(this, arguments));
    }

    _createClass(Foo, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Div, null);
      }
    }]);

    return Foo;
  }(_react2.default.Component);

  Foo.contextTypes = {
    quux: _propTypes2.default.bool.isRequired
  };

  it('context propagation passes down context from the root component', function () {
    var EnhancedFoo = hoc(Foo);
    var options = { context: { quux: true } };
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(EnhancedFoo, null), options), 'Foo', options);
    _assert2.default.strictEqual(wrapper.context('quux'), true);
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement(Div, null)), true);
  });

  // eslint-disable-next-line react/no-multi-comp
  var Bar = (_temp2 = _class = function (_React$Component2) {
    _inherits(Bar, _React$Component2);

    function Bar() {
      var _ref;

      var _temp, _this2, _ret;

      _classCallCheck(this, Bar);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = Bar.__proto__ || Object.getPrototypeOf(Bar)).call.apply(_ref, [this].concat(args))), _this2), _this2.getChildContext = function () {
        return { quux: true };
      }, _temp), _possibleConstructorReturn(_this2, _ret);
    }

    _createClass(Bar, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Foo, null);
      }
    }]);

    return Bar;
  }(_react2.default.Component), _class.childContextTypes = { quux: _propTypes2.default.bool }, _temp2);


  it('context propagation passes down context from an intermediary component', function () {
    var EnhancedBar = hoc(Bar);
    var wrapper = _until2.default.call((0, _enzyme.shallow)(_react2.default.createElement(EnhancedBar, null)), 'Foo');
    _assert2.default.strictEqual(wrapper.context('quux'), true);
    _assert2.default.strictEqual(wrapper.contains(_react2.default.createElement(Div, null)), true);
  });
});

//# sourceMappingURL=until.test.js.map