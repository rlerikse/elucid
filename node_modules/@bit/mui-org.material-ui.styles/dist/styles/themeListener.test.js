'use strict';

var _chai = require('chai');

var _brcast = require('brcast');

var _brcast2 = _interopRequireDefault(_brcast);

var _themeListener = require('./themeListener');

var _themeListener2 = _interopRequireDefault(_themeListener);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

describe('themeListener', function () {
  it('should be able to get the initial state', function () {
    var broadcast = (0, _brcast2.default)();
    var initialState = {};
    broadcast.setState(initialState);

    _chai.assert.strictEqual(_themeListener2.default.initial(_defineProperty({}, _themeListener.CHANNEL, broadcast)), initialState);
  });

  it('should not complain if the context is not defined', function () {
    _chai.assert.strictEqual(_themeListener2.default.initial({}), null);
  });

  it('should be able to subscribe to the event stream', function (done) {
    var broadcast = (0, _brcast2.default)();
    var initialState = {};
    var secondState = {};
    broadcast.setState(initialState);

    _themeListener2.default.subscribe(_defineProperty({}, _themeListener.CHANNEL, broadcast), function (state) {
      _chai.assert.strictEqual(state, secondState);
      done();
    });

    broadcast.setState(secondState);
  });
});

//# sourceMappingURL=themeListener.test.js.map