'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _deepmerge = require('deepmerge');

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _isPlainObject = require('is-plain-object');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _createBreakpoints = require('./createBreakpoints');

var _createBreakpoints2 = _interopRequireDefault(_createBreakpoints);

var _createMixins = require('./createMixins');

var _createMixins2 = _interopRequireDefault(_createMixins);

var _createPalette = require('./createPalette');

var _createPalette2 = _interopRequireDefault(_createPalette);

var _createTypography = require('./createTypography');

var _createTypography2 = _interopRequireDefault(_createTypography);

var _shadows = require('./shadows');

var _shadows2 = _interopRequireDefault(_shadows);

var _shape = require('./shape');

var _shape2 = _interopRequireDefault(_shape);

var _spacing = require('./spacing');

var _spacing2 = _interopRequireDefault(_spacing);

var _transitions = require('./transitions');

var _transitions2 = _interopRequireDefault(_transitions);

var _zIndex = require('./zIndex');

var _zIndex2 = _interopRequireDefault(_zIndex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // < 1kb payload overhead when lodash/merge is > 3kb.


function createMuiTheme() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _options$breakpoints = options.breakpoints,
      breakpointsInput = _options$breakpoints === undefined ? {} : _options$breakpoints,
      _options$mixins = options.mixins,
      mixinsInput = _options$mixins === undefined ? {} : _options$mixins,
      _options$palette = options.palette,
      paletteInput = _options$palette === undefined ? {} : _options$palette,
      shadowsInput = options.shadows,
      _options$spacing = options.spacing,
      spacingInput = _options$spacing === undefined ? {} : _options$spacing,
      _options$typography = options.typography,
      typographyInput = _options$typography === undefined ? {} : _options$typography,
      other = _objectWithoutProperties(options, ['breakpoints', 'mixins', 'palette', 'shadows', 'spacing', 'typography']);

  var palette = (0, _createPalette2.default)(paletteInput);
  var breakpoints = (0, _createBreakpoints2.default)(breakpointsInput);
  var spacing = Object.assign({}, _spacing2.default, spacingInput);

  var muiTheme = Object.assign({
    breakpoints: breakpoints,
    direction: 'ltr',
    mixins: (0, _createMixins2.default)(breakpoints, spacing, mixinsInput),
    overrides: {}, // Inject custom styles
    palette: palette,
    props: {}, // Inject custom properties
    shadows: shadowsInput || _shadows2.default,
    typography: (0, _createTypography2.default)(palette, typographyInput)
  }, (0, _deepmerge2.default)({
    shape: _shape2.default,
    spacing: spacing,
    transitions: _transitions2.default,
    zIndex: _zIndex2.default
  }, other, {
    isMergeableObject: _isPlainObject2.default
  }));

  if (process.env.NODE_ENV !== 'production') {
    var statesWarning = ['disabled', 'focused', 'selected', 'checked'];
    var traverse = function traverse(node, parentKey) {
      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

      var key = void 0;

      // eslint-disable-next-line guard-for-in, no-restricted-syntax
      for (key in node) {
        var child = node[key];
        if (depth === 1) {
          if (key.indexOf('Mui') === 0 && child) {
            traverse(child, key, depth + 1);
          }
        } else if (statesWarning.indexOf(key) !== -1 && Object.keys(child).length > 0) {
          (0, _warning2.default)(false, ['Material-UI: the `' + parentKey + '` component increases ' + ('the CSS specificity of the `' + key + '` internal state.'), 'You can not override it like this: ', JSON.stringify(node, null, 2), '', 'Instead, you need to use the $ruleName syntax:', JSON.stringify(_defineProperty({}, '&$' + key, child), null, 2), '', 'https://material-ui.com/customization/overrides#internal-states'].join('\n'));
        }
      }
    };

    traverse(other.overrides);
  }

  (0, _warning2.default)(muiTheme.shadows.length === 25, 'Material-UI: the shadows array provided to createMuiTheme should support 25 elevations.');

  return muiTheme;
}

exports.default = createMuiTheme;

//# sourceMappingURL=createMuiTheme.js.map