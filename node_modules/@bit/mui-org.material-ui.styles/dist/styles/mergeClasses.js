'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _utils = require('@material-ui/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mergeClasses() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var baseClasses = options.baseClasses,
      newClasses = options.newClasses,
      Component = options.Component;


  if (!newClasses) {
    return baseClasses;
  }

  var nextClasses = Object.assign({}, baseClasses);

  if (process.env.NODE_ENV !== 'production' && typeof newClasses === 'string') {
    (0, _warning2.default)(false, ['Material-UI: the value `' + newClasses + '` ' + ('provided to the classes property of ' + (0, _utils.getDisplayName)(Component) + ' is incorrect.'), 'You might want to use the className property instead.'].join('\n'));

    return baseClasses;
  }

  Object.keys(newClasses).forEach(function (key) {
    (0, _warning2.default)(baseClasses[key] || !newClasses[key], ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not implemented in ' + (0, _utils.getDisplayName)(Component) + '.'), 'You can only override one of the following: ' + Object.keys(baseClasses).join(',') + '.'].join('\n'));

    (0, _warning2.default)(!newClasses[key] || typeof newClasses[key] === 'string', ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not valid for ' + (0, _utils.getDisplayName)(Component) + '.'), 'You need to provide a non empty string instead of: ' + newClasses[key] + '.'].join('\n'));

    if (newClasses[key]) {
      nextClasses[key] = baseClasses[key] + ' ' + newClasses[key];
    }
  });

  return nextClasses;
}

exports.default = mergeClasses;

//# sourceMappingURL=mergeClasses.js.map