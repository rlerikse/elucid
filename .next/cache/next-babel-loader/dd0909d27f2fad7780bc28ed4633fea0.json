{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/z/repos/elucid/pages/index.js\";\nimport React from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport config from \"../src/aws-exports\";\nAPI.configure(config);\nimport Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport { createUser, updateUser, deleteUser, createUserList, deleteUserList, updateUserList } from \"../src/graphql/mutations\";\nimport { getUserList, getUser, listUsers } from \"../src/graphql/queries\";\nimport { onCreateUser, onUpdateUser, onDeleteUser, onCreateUserList, onUpdateUserList, onDeleteUserList } from \"../src/graphql/subscriptions\";\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Welcome to Elucid\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Currently registered users\"), React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Yamama\"), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.users))));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var result;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return API.graphql(graphqlOperation(listUsers, {\n            id: \"global\"\n          }));\n\n        case 3:\n          result = _context.sent;\n          console.log(result);\n          return _context.abrupt(\"return\", result);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.warn(_context.t0);\n          return _context.abrupt(\"return\", {\n            users: []\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 8]]);\n}));\nexport default Index;","map":{"version":3,"sources":["/mnt/z/repos/elucid/pages/index.js"],"names":["API","graphqlOperation","config","configure","Fetch","Layout","createUser","updateUser","deleteUser","createUserList","deleteUserList","updateUserList","getUserList","getUser","listUsers","onCreateUser","onUpdateUser","onDeleteUser","onCreateUserList","onUpdateUserList","onDeleteUserList","Index","props","users","getInitialProps","graphql","id","result","console","log","warn"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACAF,GAAG,CAACG,SAAJ,CAAcD,MAAd;AACA,OAAOE,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACIC,UADJ,EAEIC,UAFJ,EAGIC,UAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,cANJ,QAOO,0BAPP;AAQA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,SAA9B,QAA8C,wBAA9C;AAEA,SACIC,YADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,gBAJJ,EAKIC,gBALJ,EAMIC,gBANJ,QAOO,8BAPP;;AAUA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,EAGI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,KAAK,CAACC,KAAvC,CAFJ,CAHJ,CADJ,CADU;AAAA,CAAd;;AAaAF,KAAK,CAACG,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAIDxB,GAAG,CAACyB,OAAJ,CAAYxB,gBAAgB,CAACa,SAAD,EAAY;AAAEY,YAAAA,EAAE,EAAE;AAAN,WAAZ,CAA5B,CAJC;;AAAA;AAIhBC,UAAAA,MAJgB;AAKhBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AALgB,2CAMTA,MANS;;AAAA;AAAA;AAAA;AAQhBC,UAAAA,OAAO,CAACE,IAAR;AARgB,2CAST;AAAEP,YAAAA,KAAK,EAAE;AAAT,WATS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAiCA,eAAeF,KAAf","sourcesContent":["import { API, graphqlOperation } from \"aws-amplify\";\nimport config from \"../src/aws-exports\";\nAPI.configure(config);\nimport Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport {\n    createUser,\n    updateUser,\n    deleteUser,\n    createUserList,\n    deleteUserList,\n    updateUserList,\n} from \"../src/graphql/mutations\";\nimport {getUserList, getUser, listUsers} from \"../src/graphql/queries\";\n\nimport {\n    onCreateUser,\n    onUpdateUser,\n    onDeleteUser,\n    onCreateUserList,\n    onUpdateUserList,\n    onDeleteUserList,\n} from \"../src/graphql/subscriptions\";\n\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n            <h1>Welcome to Elucid</h1>\n            <p>Currently registered users</p>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Yamama</li>\n                <li className=\"list-group-item\">{props.users}</li>\n            </ul>\n        </div>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n    let result; /*: { data: GetTodoListQuery; errors: {}[] };*/\n    try {\n        // Fetch our list from the server\n        result = await API.graphql(graphqlOperation(listUsers, { id: \"global\" }));\n        console.log(result);\n        return result;\n    } catch (err) {\n        console.warn(err);\n        return { users: [] };\n    }\n    // if (result.errors) {\n    //     console.warn(\"Failed to fetch getUserList. \", result.errors);\n    //     return { users: [] };\n    // }\n    // if (result.data !== null) {\n    //     return { users: result.data.users.name };\n    // }\n    // try {\n    //     await API.graphql(\n    //         graphqlOperation(createUserList, {\n    //             input: {\n    //                 id: \"global\",\n    //                 createdAt: `${Date.now()}`\n    //             }\n    //         })\n    //     );\n    // } catch (err) {\n    //     console.warn(err);\n    // }\n    // return { users: [] };\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}