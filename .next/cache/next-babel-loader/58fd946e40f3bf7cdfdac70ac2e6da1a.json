{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/z/repos/elucid/utils/auth.js\";\nimport React from \"react\";\nimport { Component } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nexport var login =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = _ref.token;\n            cookie.set('token', token, {\n              expires: 1\n            });\n            Router.push('/profile');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function login(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var logout = function logout() {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', _Date$now());\n  Router.push('/login');\n}; // Gets the display name of a JSX component for dev tools\n\nvar getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n};\n\nexport var withAuthSync = function withAuthSync(WrappedComponent) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(_class, _Component);\n\n    _createClass(_class, null, [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(ctx) {\n          var token, componentProps;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  token = auth(ctx);\n                  _context2.t0 = WrappedComponent.getInitialProps;\n\n                  if (!_context2.t0) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  _context2.next = 5;\n                  return WrappedComponent.getInitialProps(ctx);\n\n                case 5:\n                  _context2.t0 = _context2.sent;\n\n                case 6:\n                  componentProps = _context2.t0;\n                  return _context2.abrupt(\"return\", _objectSpread({}, componentProps, {\n                    token: token\n                  }));\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        function getInitialProps(_x2) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    function _class(props) {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n      _this.syncLogout = _this.syncLogout.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        window.addEventListener('storage', this.syncLogout);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        window.removeEventListener('storage', this.syncLogout);\n        window.localStorage.removeItem('logout');\n      }\n    }, {\n      key: \"syncLogout\",\n      value: function syncLogout(event) {\n        if (event.key === 'logout') {\n          console.log('logged out from storage!');\n          Router.push('/login');\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(WrappedComponent, _extends({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      }\n    }]);\n\n    return _class;\n  }(Component), _defineProperty(_class, \"displayName\", \"withAuthSync(\".concat(getDisplayName(WrappedComponent), \")\")), _temp;\n};\nexport var auth = function auth(ctx) {\n  var _nextCookie = nextCookie(ctx),\n      token = _nextCookie.token;\n  /*\r\n   * This happens on server only, ctx.req is available means it's being\r\n   * rendered on server. If we are on server and token is not available,\r\n   * means user is not logged in.\r\n   */\n\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/login'\n    });\n    ctx.res.end();\n    return;\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/login');\n  }\n\n  return token;\n};","map":{"version":3,"sources":["/mnt/z/repos/elucid/utils/auth.js"],"names":["Component","Router","nextCookie","cookie","login","token","set","expires","push","logout","remove","window","localStorage","setItem","getDisplayName","displayName","name","withAuthSync","WrappedComponent","ctx","auth","getInitialProps","componentProps","props","syncLogout","bind","addEventListener","removeEventListener","removeItem","event","key","console","log","req","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport Router from 'next/router'\r\nimport nextCookie from 'next-cookies'\r\nimport cookie from 'js-cookie'\r\n\r\nexport const login = async ({ token }) => {\r\n  cookie.set('token', token, { expires: 1 })\r\n  Router.push('/profile')\r\n}\r\n\r\nexport const logout = () => {\r\n  cookie.remove('token')\r\n  // to support logging out from all windows\r\n  window.localStorage.setItem('logout', Date.now())\r\n  Router.push('/login')\r\n}\r\n\r\n// Gets the display name of a JSX component for dev tools\r\nconst getDisplayName = Component =>\r\n  Component.displayName || Component.name || 'Component'\r\n\r\nexport const withAuthSync = WrappedComponent =>\r\n  class extends Component {\r\n    static displayName = `withAuthSync(${getDisplayName(WrappedComponent)})`\r\n\r\n    static async getInitialProps (ctx) {\r\n      const token = auth(ctx)\r\n\r\n      const componentProps =\r\n        WrappedComponent.getInitialProps &&\r\n        (await WrappedComponent.getInitialProps(ctx))\r\n\r\n      return { ...componentProps, token }\r\n    }\r\n\r\n    constructor (props) {\r\n      super(props)\r\n\r\n      this.syncLogout = this.syncLogout.bind(this)\r\n    }\r\n\r\n    componentDidMount () {\r\n      window.addEventListener('storage', this.syncLogout)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n      window.removeEventListener('storage', this.syncLogout)\r\n      window.localStorage.removeItem('logout')\r\n    }\r\n\r\n    syncLogout (event) {\r\n      if (event.key === 'logout') {\r\n        console.log('logged out from storage!')\r\n        Router.push('/login')\r\n      }\r\n    }\r\n\r\n    render () {\r\n      return <WrappedComponent {...this.props} />\r\n    }\r\n  }\r\n\r\nexport const auth = ctx => {\r\n  const { token } = nextCookie(ctx)\r\n\r\n  /*\r\n   * This happens on server only, ctx.req is available means it's being\r\n   * rendered on server. If we are on server and token is not available,\r\n   * means user is not logged in.\r\n   */\r\n  if (ctx.req && !token) {\r\n    ctx.res.writeHead(302, { Location: '/login' })\r\n    ctx.res.end()\r\n    return\r\n  }\r\n\r\n  // We already checked for server. This should only happen on client.\r\n  if (!token) {\r\n    Router.push('/login')\r\n  }\r\n\r\n  return token\r\n}\r\n"]},"metadata":{},"sourceType":"module"}